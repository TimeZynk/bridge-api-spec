openapi: "3.0.0"
info:
  title: Timezynk integration bridge API
  version: 0.0.1

tags:
  - name: Source
    description: Synk data from a data source to a Timezynk registry.
  - name: Sink
    description: Synk data from a Timezynk registry to a data sink.

paths:
  /data-sources:
    get:
      summary: List registered datasources
      tags:
        - Source
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataSource"
        '401':
          description: Unauthorized.
        '500':
          description: Unexpected error.

    post:
      summary: Register a data source
      tags:
        - Source
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSource"
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataSource"
        '400':
          description: Bad Request. Data provided in request body is invalid.
        '401':
          description: Unauthorized.
        '409':
          description: Conflict. A data source with the provided id is already existing.
        '500':
          description: Unexpected error.

  /data-sources/{dataSourceId}/synchronization-state:
    get:
      summary: Lists synchronization status for your data sources
      tags:
        - Source
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    entity-id:
                      type: string
                    last-sync:
                      type: number
                      format: timestamp
                    last-update:
                      type: number
                      format: timestamp
        '401':
          description: Unauthorized.
        '500':
          description: Unexpected error.
    parameters:
    - name: dataSourceId
      description: Id of the data source
      required: true
      in: path
      schema:
        type: string

  /data-sources/{dataSourceId}/entities/{entityId}/changes:
    post:
      summary: Sync changes from data source
      tags:
        - Source

      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/DataSource"

      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataSource"
        '400':
          description: Bad Request. Data provided in request body is invalid.
        '401':
          description: Unauthorized.
        '500':
          description: unexpected error.
    parameters:
    - name: dataSourceId
      description: Id of the data source
      required: true
      in: path
      schema:
        type: string
    - name: entityId
      description: Id of the entity
      required: true
      in: path
      schema:
        type: string

components:
  schemas:
    DataSource:
      properties: 
        id:
          type: string
          description: id of the source
        name:
          type: string
          description: name of the source
        company-id:
          type: string
          description: id of the company that owns this data
        entities:
          type: array
          description: list of available entities
          items:
            $ref: "#/components/schemas/Entity"
      required:
        - id
        - name
        - company-id
        - entities

    DataSink:
      properties: 
        id:
          type: string
          description: id of the source
        name:
          type: string
          description: name of the source
        company-id:
          type: string
          description: id of the company that owns this data
        entities:
          type: array
          description: list of available entities
          items:
            $ref: "#/components/schemas/Entity"
      required:
        - id
        - name
        - company-id
        - entities

    Entity:
      properties: 
        id:
          type: string
          description: id of the entity
        name:
          type: string
          description: title of the entity
        fields:
          type: array
          description: list of available entities
          items:
            $ref: "#/components/schemas/Field"
        field-key:
          type: string
          description: Identifies a unique field which will be used as key (id) for the entity rows.
        timestamp-key:
          type: string
          description: Identifies a timestamp field which will be used to calculate the most recent updated synced entry.
        last-sync:
          type: integer
          format: timestamp
          description: Timestamp of the latest sync.
          readOnly: true
        last-update:
          type: integer
          format: timestamp
          description: Timestamp of the latest updated entry
          readOnly: true
      required:
        - id
        - name
        - fields
        - field-key
        - timestamp-key

    Field:
      properties:
        id:
          type: string
          description: id of the field
        name:
          type: string
          description: title of the field
        type:
          type: string
          enum: [string, number, boolean]
          description: the value json data type
        required:
          type: boolean
          description: indicates if this field is required
          default: true
      required:
        - id
        - name
        - type
        - required

    EntitySettings:
      properties:
        company-id:
          type: string
          description: id of the company that owns this data
        source-id:
          type: string
          description: Id of the source which contains the entity.
        entity-id:
          type: string
          description: Id of the entity id to map fields.
        registry-id:
          type: string
          format: ObjectId
          description: Id of the Timezynk registry to map fields.
        sync-interval:
          type: integer
          description: Duration of the sync interval entered in ms.
        field-mapping:
          type: array
          description: list of field mapping
          items:
            $ref: "#/components/schemas/FieldSettings"
      required:
        - company-id
        - source-id
        - entity-id
        - registry-id
        - sync-id
        - field-mapping

    FieldSettings:
      properties:
        entity-field-id:
          type: string
          description: Id of the entity field to map.
        registry-field-id:
          type: string
          description: Id of the Timezynk registry field to map.
        static-field: 
          type: boolean
          description: Set true if this field is a static registry field
          default: false
      required:
        - entity-field-id
        - registry-field-id
        - static-field

